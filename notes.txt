if nvidia gpus are used with cuda api, then we can convert fp32 to tf32 which is just a 
truncated version of 32 bits with the mantissa cut to 10 bits instead of 23, and the sign
and bias exponent bits remain the same, where tf32 stands for tensorfloat-32, and the result
of this is an 8time improvement over fp32 TOPS

tf32 could be further reduced to bf16 where there are 7 mantissa bits 

fp16 could also be used but it truncates the bias exponent bits too, from 8 to 5 and hence
the range of nos decreases, hence differnet approaches like gradient scaling needs to be
used, which does become an annoyance, hence bf16 is preferred

now looking at torch.compile which can speed up the training code by a HUGE extent. Its
basically like a compiler, like gcc for C/C++ code. It looks at the entire code as a single
object and does not use the python interpreter, once the compiler object is formed, since
it knows what is where, it does not go through the code in eager mode as a python interpreter
would do. 

some notes related to server side domain

in the C server implemenation here its designed to be multithreaded, hence when we put in
localhost:8080/main.html say, a thread gets created which handles this req, so when the
server sends main.html to the browser(client) as a res, then the browser being a special
client, parses the html file and sees the requirement of main.css and main.jpg, and 
send separate GET reqs to the server in different thread to the server, hence we end up seeing
multiple GET reqs by the client even though we only entered localhost:8080/main.html

also the input field needs to be within the form so that the contents get sent as a req
to the server, also if we put "/submit" as value for action attr, then the req gets 
sent to the endpoint /submit, more specifically, it gets sent to localhost:8080/submit, but
that is given its a POST method, if its GET it gets appended to the url itself, where we say
get localhost:8080/submit?username=something, and then it can be parsed that way

(note: never ever use git lfs, its a pain and annoying, asks for ssh to be entered 5 times
everytime, and still does not push large files to the repo, very bad, instead what I did
was put the saved_models folder to .gitignore so that they are not tracked, its better
and also does not actually expose the params of the model)

another issue I ran into was when I submitted my form data, it did show up as GET req on 
my server logs, but a new tab opened up every time which represented the form tab and this was\
very annoying, so i decided the prevent the defualt behaviour of the "submit" event which was
attatched to the from DOM element, but this prevented the sending of the GET req too, but ended
up adjusting the server code to serve the same file itself which was present in the Referer
header in the GET req sent by the client when the req has "submit?prompt=" in it, hence instead
of serving the client the form file, it serves it the same file in where it was


. might not work as expected in regex in POSIX, as its a lazy quantifier

also note to self, to put a folder in .gitignore which was already being tracked by git
we have to first remove it from being tracked and then put it in .gitignore, that can be done
by
    git rm -r --cached folder

then add that folder to .gitignore